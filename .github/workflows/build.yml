name: Build

on:
  push:
    branches:
    - actions
    paths-ignore:
    - '*.{txt,md}'
    - 'Tools/**'
    - '.{editorconfig,gitattributes,gitignore}'
    - 'appveyor.yml'
  pull_request:
    branches:
    - master
    paths-ignore:
    - '*.{txt,md}'
    - 'Tools/**'
    - '.{editorconfig,gitattributes,gitignore}'
    - 'appveyor.yml'

env:
  BUILD_CONFIGURATION: Release

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: ubuntu-latest
          extra: test
          cc: clang
          cxx: clang++
          args: ./b.sh --headless
        - os: ubuntu-latest
          cc: gcc
          cxx: g++
          args: ./b.sh --headless
        - os: ubuntu-latest
          extra: qt
          cc: gcc
          cxx: g++
          args: ./b.sh --qt
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      if: matrix.extra == 'qt'

    - uses: nttld/setup-ndk@v1
      if: matrix.extra == 'android'
      id: setup-ndk
      with:
        ndk-version: r21d

    - name: Install Linux dependencies
      if: runner.os == 'Linux' && matrix.extra != 'android'
      run: |
        sudo add-apt-repository -y "deb http://archive.ubuntu.com/ubuntu `lsb_release -sc` main universe restricted multiverse"
        sudo apt-get update -y -qq
        sudo apt-get install libsdl2-dev libgl1-mesa-dev libglu1-mesa-dev

    - name: Execute build
      env:
        CC: ${{ matrix.cc }}
        CXX: ${{ matrix.cxx }}
        NDK: ${{ steps.setup-ndk.outputs.ndk-path }}
      run: ${{ matrix.args }}

    - name: Package build
      if: matrix.extra == 'test'
      run: |
        mkdir ppsspp
        if [ -e build*/$BUILD_CONFIGURATION/PPSSPPSDL ]; then
          cp build*/$BUILD_CONFIGURATION/PPSSPPSDL ppsspp/
        elif [ -e build*/PPSSPPSDL.app ]; then
          cp -r build*/PPSSPPSDL.app ppsspp/
        elif [ -e build*/PPSSPPSDL ]; then
          cp build*/PPSSPPSDL ppsspp/
          cp -r assets ppsspp/assets
        fi
        if [ -e build*/$BUILD_CONFIGURATION/PPSSPPHeadless ]; then
          cp build*/$BUILD_CONFIGURATION/PPSSPPHeadless ppsspp/
        elif [ -e build*/PPSSPPHeadless ]; then
          cp build*/PPSSPPHeadless ppsspp/
        fi

    - name: Upload build
      uses: actions/upload-artifact@v1
      if: matrix.extra == 'test'
      with:
        name: ${{ matrix.os }} build
        path: ppsspp/


